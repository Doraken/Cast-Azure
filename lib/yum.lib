###############################################################################
# yum.lib                                               Version : 1.0         #
#                                                                             #
# Creation Date : 05/02/2019                                                  #
# Team          : Arnaud Crampet                                              #
# Support mail  : arnaud@crampet.net                                          #
# Author        : Arnaud Crampet                                              #
#                                                                             #
# Subject : This library provide base elements needed by C.A.S.T. scripts     #
#           this lib is based on C.A.S.T. framwork created by ARNAUD CRAMPET  #
###############################################################################
####
# INFO 
#      this lib is for all linux based systems ( may run on solaris and AIX but not supported in this version )




function yum_Install_Package
{
#|# Description : This function is used to manage installation of yum packages on system. 
#|#
#|# Var to set    :
#|#                 YumPackageToInstall  : Use this var to set wiche package to install with yum
#|#                 ${1}            : Use this var to set [ YumPackageToInstall ]
#|#
#|# Base usage  : yum_Install_Package "My_package_to_install"
#|#
#|# Send Back   : Installed package
############ STACK_TRACE_BUILDER #####################
Function_PATH="${Function_PATH}/${FUNCNAME[0]}"
######################################################
MSG_DISPLAY "Debug6" "Current Stack : [ ${Function_PATH} ] "

YumPackageToInstall=${1}
Empty_Var_Control "${YumPackageToInstall}" "YumPackageToInstall" "ErrorN" "2" "package name is a mandatory parameter "
yum_check_Package ${YumPackageToInstall}
if [ "${YumPackageStatus}" = "NOT INSTALLED" ] 
then 
    yum install ${YumPackageToInstall} -y> /dev/null 2>&1 
    CTRL_Result_func "${?}" "status for package : [ ${YumPackageToCheck}] " "Not Installed" "4" "" "" "nomsg"
else
    MSG_DISPLAY "Debug" "Package ${YumPackageStatus} : [ INSTALLED ] "
fi

############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
#################################################### 
} 

function yum_UnInstall_Package
{
#|# Description         : This function is used to manage uninstallation of yum packages on system.
#|# 
#|# Var to set            : 
#|#                            YumPackageToUnInstall Use this var to set which package to uninstall
#|#                         ${1}                 : use this var to set YumPackageToUnInstall
#|#
#|# Basic use             : yum_Install_Package "My_package_to_uninstall" 
#|#
#|# Send Back       : Unsinstalled package
############ STACK_TRACE_BUILDER #####################
Function_PATH="${Function_PATH}/${FUNCNAME[0]}"
######################################################
MSG_DISPLAY "Debug6" "Current Stack : [ ${Function_PATH} ] "

YumPackageToUnInstall=${1}
yum_check_Package ${YumPackageToUnInstall}
if [ "${YumPackageStatus}" = "INSTALLED" ] 
then 
    yum erase  ${YumPackageToUnInstall} -y -q> /dev/null 2>&1
    CTRL_Result_func "${?}" "status for package : [ ${YumPackageToUnInstall}] " "Can t uninstall" "4" "" "" "nomsg"
else
    MSG_DISPLAY "Debug" "Package ${YumPackageStatus} : [ NOT INSTALLED ] "
fi
yum update -y> /dev/null 2>&1 1> /dev/null 
############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
#################################################### 
} 

function yum_check_Package
{
#|# Var to set  : YumPackageToCheck             
#|#
#|# Base usage  : Cyum_check_Package PackageName
#|#
#|# Description : This function Check package instalation status.
#|#
#|# Send Back   : Info and action ( execution of other fcntion to set many information about the system) 
############ STACK_TRACE_BUILDER #####################
Function_PATH="${Function_PATH}/${FUNCNAME[0]}"
######################################################
MSG_DISPLAY "Debug6" "Current Stack : [ ${Function_PATH} ] "

YumPackageToCheck=${1}


Empty_Var_Control "${YumPackageToCheck}" "YumPackageToCheck" "ErrorN" "2" "package name is a mandatory parameter "
yum list installed ${YumPackageToCheck} -q> /dev/null 2>&1
CTRL_Result_func "${?}" "status for package : [ ${YumPackageToCheck}] " "Not Installed" "0" "yum_check_Package_sub_u" "yum_check_Package_sub_i" "nomsg"


############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
#################################################### 
} 

function yum_check_Package_sub_i
{
#|# Description : This function is used with CTRL_Result_func as success or error result
#|#
#|# Var to set  : None             
#|#
#|# Base usage  : yum_check_Package_sub_i 
#|#
#|# Send Back   : YumPackageStatus seted at INSTALLED
############ STACK_TRACE_BUILDER #####################
Function_PATH="${Function_PATH}/${FUNCNAME[0]}"
######################################################
MSG_DISPLAY "Debug6" "Current Stack : [ ${Function_PATH} ] "

YumPackageStatus="INSTALLED"

############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
####################################################
}

function yum_check_Package_sub_u
{
#|# Description : This function is used with CTRL_Result_func as success or error result
#|#
#|# Var to set  : None             
#|#
#|# Base usage  : yum_check_Package_sub_u 
#|#
#|# Send Back   : YumPackageStatus seted at NOT INSTALLED
############ STACK_TRACE_BUILDER #####################
Function_PATH="${Function_PATH}/${FUNCNAME[0]}"
######################################################
MSG_DISPLAY "Debug6" "Current Stack : [ ${Function_PATH} ] "

YumPackageStatus="NOT INSTALLED"

############### Stack_TRACE_BUILDER ################
Function_PATH="$( dirname ${Function_PATH} )"
####################################################
}

Sourced_OK="1"